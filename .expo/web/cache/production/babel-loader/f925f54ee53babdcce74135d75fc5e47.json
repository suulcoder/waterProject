{"ast":null,"code":"import{lessThan,multiply,sub,add,divide,greaterThan,lessOrEq,eq}from\"../operators\";import invariant from'fbjs/lib/invariant';import AnimatedNode from\"../core/AnimatedNode\";import{createAnimatedCond as cond}from\"../core/AnimatedCond\";import{createAnimatedFunction as proc}from\"../core/AnimatedFunction\";var interpolateInternalSingleProc=proc(function(value,inS,inE,outS,outE){var progress=divide(sub(value,inS),sub(inE,inS));var resultForNonZeroRange=add(outS,multiply(progress,sub(outE,outS)));var result=cond(eq(inS,inE),cond(lessOrEq(value,inS),outS,outE),resultForNonZeroRange);return result;});function interpolateInternalSingle(value,inputRange,outputRange,offset){var inS=inputRange[offset];var inE=inputRange[offset+1];var outS=outputRange[offset];var outE=outputRange[offset+1];return interpolateInternalSingleProc(value,inS,inE,outS,outE);}function interpolateInternal(value,inputRange,outputRange){var offset=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;if(inputRange.length-offset===2){return interpolateInternalSingle(value,inputRange,outputRange,offset);}return cond(lessThan(value,inputRange[offset+1]),interpolateInternalSingle(value,inputRange,outputRange,offset),interpolateInternal(value,inputRange,outputRange,offset+1));}export var Extrapolate={EXTEND:'extend',CLAMP:'clamp',IDENTITY:'identity'};function checkNonDecreasing(name,arr){for(var i=1;i<arr.length;++i){if(arr[i]instanceof AnimatedNode||arr[i-1]instanceof AnimatedNode)continue;invariant(arr[i]>=arr[i-1],'%s must be monotonically non-decreasing. (%s)',name,arr);}}function checkMinElements(name,arr){invariant(arr.length>=2,'%s must have at least 2 elements. (%s)',name,arr);}function checkValidNumbers(name,arr){for(var i=0;i<arr.length;i++){if(arr[i]instanceof AnimatedNode)continue;invariant(Number.isFinite(arr[i]),'%s cannot include %s. (%s)',name,arr[i],arr);}}export default function interpolate(value,config){var inputRange=config.inputRange,outputRange=config.outputRange,_config$extrapolate=config.extrapolate,extrapolate=_config$extrapolate===void 0?Extrapolate.EXTEND:_config$extrapolate,extrapolateLeft=config.extrapolateLeft,extrapolateRight=config.extrapolateRight;checkMinElements('inputRange',inputRange);checkValidNumbers('inputRange',inputRange);checkMinElements('outputRange',outputRange);checkValidNumbers('outputRange',outputRange);checkNonDecreasing('inputRange',inputRange);invariant(inputRange.length===outputRange.length,'inputRange and outputRange must be the same length.');var left=extrapolateLeft||extrapolate;var right=extrapolateRight||extrapolate;var output=interpolateInternal(value,inputRange,outputRange);if(left===Extrapolate.EXTEND){}else if(left===Extrapolate.CLAMP){output=cond(lessThan(value,inputRange[0]),outputRange[0],output);}else if(left===Extrapolate.IDENTITY){output=cond(lessThan(value,inputRange[0]),value,output);}if(right===Extrapolate.EXTEND){}else if(right===Extrapolate.CLAMP){output=cond(greaterThan(value,inputRange[inputRange.length-1]),outputRange[outputRange.length-1],output);}else if(right===Extrapolate.IDENTITY){output=cond(greaterThan(value,inputRange[inputRange.length-1]),value,output);}return output;}","map":{"version":3,"sources":["/home/thecoder/Documentos/UVG/Ecofiltro/waterProject/node_modules/react-native-reanimated/src/derived/interpolate.js"],"names":["lessThan","multiply","sub","add","divide","greaterThan","lessOrEq","eq","invariant","AnimatedNode","createAnimatedCond","cond","createAnimatedFunction","proc","interpolateInternalSingleProc","value","inS","inE","outS","outE","progress","resultForNonZeroRange","result","interpolateInternalSingle","inputRange","outputRange","offset","interpolateInternal","length","Extrapolate","EXTEND","CLAMP","IDENTITY","checkNonDecreasing","name","arr","i","checkMinElements","checkValidNumbers","Number","isFinite","interpolate","config","extrapolate","extrapolateLeft","extrapolateRight","left","right","output"],"mappings":"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","sourcesContent":["import {\n  lessThan,\n  multiply,\n  sub,\n  add,\n  divide,\n  greaterThan,\n  lessOrEq,\n  eq,\n} from '../operators';\nimport invariant from 'fbjs/lib/invariant';\n\nimport AnimatedNode from '../core/AnimatedNode';\nimport { createAnimatedCond as cond } from '../core/AnimatedCond';\nimport { createAnimatedFunction as proc } from '../core/AnimatedFunction';\n\nconst interpolateInternalSingleProc = proc(function(\n  value,\n  inS,\n  inE,\n  outS,\n  outE\n) {\n  const progress = divide(sub(value, inS), sub(inE, inS));\n  // logic below was made in order to provide a compatibility witn an Animated API\n  const resultForNonZeroRange = add(outS, multiply(progress, sub(outE, outS)));\n  const result = cond(eq(inS, inE), cond(lessOrEq(value, inS), outS, outE), resultForNonZeroRange);\n  return result;\n});\n\nfunction interpolateInternalSingle(value, inputRange, outputRange, offset) {\n  const inS = inputRange[offset];\n  const inE = inputRange[offset + 1];\n  const outS = outputRange[offset];\n  const outE = outputRange[offset + 1];\n  return interpolateInternalSingleProc(value, inS, inE, outS, outE);\n}\n\nfunction interpolateInternal(value, inputRange, outputRange, offset = 0) {\n  if (inputRange.length - offset === 2) {\n    return interpolateInternalSingle(value, inputRange, outputRange, offset);\n  }\n  return cond(\n    lessThan(value, inputRange[offset + 1]),\n    interpolateInternalSingle(value, inputRange, outputRange, offset),\n    interpolateInternal(value, inputRange, outputRange, offset + 1)\n  );\n}\n\nexport const Extrapolate = {\n  EXTEND: 'extend',\n  CLAMP: 'clamp',\n  IDENTITY: 'identity',\n};\n\nfunction checkNonDecreasing(name, arr) {\n  for (let i = 1; i < arr.length; ++i) {\n    // We can't validate animated nodes in JS.\n    if (arr[i] instanceof AnimatedNode || arr[i - 1] instanceof AnimatedNode)\n      continue;\n    invariant(\n      arr[i] >= arr[i - 1],\n      '%s must be monotonically non-decreasing. (%s)',\n      name,\n      arr\n    );\n  }\n}\n\nfunction checkMinElements(name, arr) {\n  invariant(\n    arr.length >= 2,\n    '%s must have at least 2 elements. (%s)',\n    name,\n    arr\n  );\n}\n\nfunction checkValidNumbers(name, arr) {\n  for (let i = 0; i < arr.length; i++) {\n    // We can't validate animated nodes in JS.\n    if (arr[i] instanceof AnimatedNode) continue;\n    invariant(\n      Number.isFinite(arr[i]),\n      '%s cannot include %s. (%s)',\n      name,\n      arr[i],\n      arr\n    );\n  }\n}\n\nexport default function interpolate(value, config) {\n  const {\n    inputRange,\n    outputRange,\n    extrapolate = Extrapolate.EXTEND,\n    extrapolateLeft,\n    extrapolateRight,\n  } = config;\n  checkMinElements('inputRange', inputRange);\n  checkValidNumbers('inputRange', inputRange);\n  checkMinElements('outputRange', outputRange);\n  checkValidNumbers('outputRange', outputRange);\n  checkNonDecreasing('inputRange', inputRange);\n  invariant(\n    inputRange.length === outputRange.length,\n    'inputRange and outputRange must be the same length.'\n  );\n\n  const left = extrapolateLeft || extrapolate;\n  const right = extrapolateRight || extrapolate;\n  let output = interpolateInternal(value, inputRange, outputRange);\n\n  if (left === Extrapolate.EXTEND) {\n  } else if (left === Extrapolate.CLAMP) {\n    output = cond(lessThan(value, inputRange[0]), outputRange[0], output);\n  } else if (left === Extrapolate.IDENTITY) {\n    output = cond(lessThan(value, inputRange[0]), value, output);\n  }\n\n  if (right === Extrapolate.EXTEND) {\n  } else if (right === Extrapolate.CLAMP) {\n    output = cond(\n      greaterThan(value, inputRange[inputRange.length - 1]),\n      outputRange[outputRange.length - 1],\n      output\n    );\n  } else if (right === Extrapolate.IDENTITY) {\n    output = cond(\n      greaterThan(value, inputRange[inputRange.length - 1]),\n      value,\n      output\n    );\n  }\n\n  return output;\n}\n"]},"metadata":{},"sourceType":"module"}